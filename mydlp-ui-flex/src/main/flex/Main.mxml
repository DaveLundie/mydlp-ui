<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx" 
			   xmlns:api="com.mydlp.ui.api.*"
			   xmlns:my="http://www.mydlp.com/flex/my"
			   xmlns:inventory="com.mydlp.ui.widget.policy.inventory.*"
			   xmlns:rule="com.mydlp.ui.widget.policy.rule.*" 
			   xmlns:option="com.mydlp.ui.widget.option.*" 
			   xmlns:objects="com.mydlp.ui.widget.objects.*"
			   xmlns:toolbar="com.mydlp.ui.widget.toolbar.*"
			   xmlns:log="com.mydlp.ui.widget.log.*" 
			   xmlns:dashboard="com.mydlp.ui.widget.dashboard.*"
			   minHeight="800" minWidth="1280" 
			   usePreloader="true"
			   applicationComplete="onCreationComplete(event)" xmlns:revision="com.mydlp.ui.widget.revision.*"
			   >
	<fx:Style source="/assets/style/general.css" />
	
	<fx:Script>
		<![CDATA[
			import com.mydlp.ui.util.LangUtil;
			import com.mydlp.ui.widget.general.popup.ClosableTitleWindow;
			
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.messaging.messages.ErrorMessage;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import org.dphibernate.rpc.HibernateManaged;
			import spark.components.TitleWindow;
			
			public var currentPopup:TitleWindow = null;

			public static const removeError:String = "org.springframework.jdbc.UncategorizedSQLException";
			
			protected function onCreationComplete(event:FlexEvent):void
			{
				HibernateManaged.defaultHibernateService = this.dataAccessService;
			}
			
			public function faultHandler(event:FaultEvent):void
			{
				var errorMessage:String = event.fault.faultString as String;
				var splittedArray:Array = errorMessage.split(":");
				var len:int = splittedArray[0].length;
				var errorString:String = (splittedArray[0] as String).substring(0, len-1);
				if(errorString == removeError)
					Alert.show(LangUtil.getString("messages", "inventory.delete.error." + errorString + ".message"),
						LangUtil.getString("messages", "inventory.delete.error." + errorString + ".title"));
				else
					Alert.show(LangUtil.getString("messages", "inventory.delete.error.unexpected.message"),
						LangUtil.getString("messages", "inventory.delete.error.unexpected.title"));
			}
			
			public function refresh(): void
			{
				if (inventoryTree != null)
					inventoryTree.refreshTree();
				if (ruleContainer != null)
					ruleContainer.refreshRules();
				if (optionContainer != null)
					if (optionContainer.userManagerTab != null)
						optionContainer.userManagerTab.refreshUsers();
				if (objectsContainer != null)
					objectsContainer.refreshObjects();
				if (dashboardContainer != null)
					dashboardContainer.refreshDashboard();
			}
			
			protected function genericResultHandler(event:ResultEvent):void
			{
				refresh();
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<my:remote id="dataAccessService" destination="dataAccessService" fault="faultHandler(event)"/>
		<my:remote id="genericRE" destination="genericBRS" fault="faultHandler(event)" >
			<my:method name="save" result="genericResultHandler(event)" fault="faultHandler(event)"/>
			<my:method name="remove" result="genericResultHandler(event)" fault="faultHandler(event)"/>
		</my:remote>
	</fx:Declarations>
	
	<s:layout>
		<s:VerticalLayout gap="0" paddingTop="4" paddingBottom="24"
						  paddingLeft="24" paddingRight="24"/>
	</s:layout>
	
	<toolbar:TopToolbar id="topToolbar" />
	
	<s:Spacer height="5" width="100%" />
	
	<s:TabBar id="tapBar" dataProvider="{vs}" fontWeight="bold" fontSize="14"/>
	
	<s:Group width="100%" height="100%">
		<s:Rect left="0" right="0" top="0" bottom="0" >
			<s:stroke>
				<s:SolidColorStroke color="0xACADAF" weight="3"/>
			</s:stroke>
		</s:Rect>
		<s:VGroup paddingTop="6" paddingBottom="6" paddingLeft="6" paddingRight="6" width="100%" height="100%">
			<mx:ViewStack id="vs" width="100%" height="100%" creationPolicy="all">
				<s:NavigatorContent label="@Resource(bundle = 'messages', key = 'maintab.dashboard')" width="100%" height="100%">
					<dashboard:DashboardContainer id="dashboardContainer" />
				</s:NavigatorContent>
				<s:NavigatorContent label="@Resource(bundle = 'messages', key = 'maintab.policy')" width="100%" height="100%">
					<s:layout>
						<s:HorizontalLayout gap="10" />
					</s:layout>
					<inventory:InventoryTree id="inventoryTree"/>
					<rule:RSpacer />
					<rule:RuleContainer id="ruleContainer" />
				</s:NavigatorContent>
				<s:NavigatorContent label="@Resource(bundle = 'messages', key = 'maintab.objects')" width="100%" height="100%">
					<mx:HDividedBox width="100%" height="100%">
						<objects:ObjectsContainer id="objectsContainer"/>
					</mx:HDividedBox>
				</s:NavigatorContent>
				<s:NavigatorContent label="@Resource(bundle = 'messages', key = 'maintab.options')" width="100%" height="100%">
					<mx:HDividedBox width="100%" height="100%">
						<option:OptionContainer id="optionContainer" width="100%" height="100%"/>
					</mx:HDividedBox>
				</s:NavigatorContent>
				<s:NavigatorContent label="@Resource(bundle = 'messages', key = 'maintab.logs')" width="100%" height="100%">
					<log:LogContainer id="logContainer" />
				</s:NavigatorContent>
				<s:NavigatorContent label="@Resource(bundle = 'messages', key = 'maintab.revisions')" width="100%" height="100%">
					<revision:RevisionContainer id="revisionContainer"/>
				</s:NavigatorContent>
			</mx:ViewStack>
		</s:VGroup>
	</s:Group>
</s:Application>