<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:my="http://www.mydlp.com/flex/my"
		 width="100%" height="100%"
		 title="@Resource(bundle = 'messages', key = 'getReport.organize.title')"
		 close="{InteractionUtil.closePopup(this)}"
		 initialize="populateDashboardItems()">
	<fx:Script>
		<![CDATA[
			import com.mydlp.ui.domain.DashboardItem;
			import com.mydlp.ui.util.InteractionUtil;
			import com.mydlp.ui.widget.dashboard.DashboardItemBox;
			import com.mydlp.ui.widget.dashboard.DashboardItemContainer;
			import com.mydlp.ui.widget.dashboard.HBarChartBox;
			import com.mydlp.ui.widget.dashboard.PieChartBox;
			
			import mx.collections.ArrayCollection;
			import mx.collections.ListCollectionView;
			import mx.graphics.ImageSnapshot;
			import mx.graphics.codec.JPEGEncoder;
			
			import org.alivepdf.display.Display;
			import org.alivepdf.images.ColorSpace;
			import org.alivepdf.layout.Mode;
			import org.alivepdf.layout.Orientation;
			import org.alivepdf.layout.Position;
			import org.alivepdf.layout.Resize;
			import org.alivepdf.layout.Size;
			import org.alivepdf.layout.Unit;
			import org.alivepdf.pdf.PDF;
			import org.alivepdf.saving.Method;
			
			
			protected static const reportItems:ListCollectionView = new ArrayCollection([
				DashboardItem.INCIDENT_BY_ACTIONS_24H,
				DashboardItem.INCIDENTS_BY_PROTOCOLS_24H, 
				DashboardItem.TOP_5_USERS_24H, 
				DashboardItem.TOP_5_RULES_24H,
				DashboardItem.TOP_5_ITYPES_24H, 
				DashboardItem.TOP_5_ADDRESS_24H, 
			]);
			
			protected var xPosition:int = 10;
			protected var yPosition:int=210;
			
			protected function addChartButtonClickHandler(event:MouseEvent):void
			{
				var bytes:ByteArray = new ByteArray;
				var reportPDF:PDF = new PDF(Orientation.PORTRAIT, Unit.MM, Size.A4);
				reportPDF.setDisplayMode(Display.REAL);
				reportPDF.addPage();
				var image:ImageSnapshot = ImageSnapshot.captureImage(printedCanvas, 300 , new JPEGEncoder(100), false);//for high resolution image
				var resize:Resize = new Resize(Mode.FIT_TO_PAGE, Position.CENTERED);//for fitting into page
				reportPDF.addImageStream(image.data, ColorSpace.DEVICE_RGB, resize);
				bytes = reportPDF.save(Method.LOCAL);
				var f:FileReference = new FileReference();
				f.save(bytes, "Weekly_Report.pdf");
			}
			
			protected function populateDashboardItems(): void
			{				
				printedCanvas.removeAllElements();
				printedCanvas.addChild(new ReportHeadComponent);
				
				for each (var i:* in reportItems)
				{
					var reportItemKey:String = i as String;
					var dashboardItemBox:DashboardItemBox = null;
					if (reportItemKey == DashboardItem.INCIDENTS_BY_PROTOCOLS_1H ||
						reportItemKey == DashboardItem.INCIDENTS_BY_PROTOCOLS_24H )
					{
						dashboardItemBox = new PieChartBox();
					} else if (reportItemKey == DashboardItem.INCIDENT_BY_ACTIONS_1H ||
						reportItemKey == DashboardItem.INCIDENT_BY_ACTIONS_24H )
					{
						dashboardItemBox = new PieChartBox();
					} else if (reportItemKey == DashboardItem.TOP_5_ADDRESS_1H ||
						reportItemKey == DashboardItem.TOP_5_ADDRESS_24H )
					{
						dashboardItemBox = new HBarChartBox();
					} else if (reportItemKey == DashboardItem.TOP_5_USERS_1H ||
						reportItemKey == DashboardItem.TOP_5_USERS_24H )
					{
						dashboardItemBox = new HBarChartBox();
					} else if (reportItemKey == DashboardItem.TOP_5_RULES_1H ||
						reportItemKey == DashboardItem.TOP_5_RULES_24H )
					{
						dashboardItemBox = new HBarChartBox();
					} else if (reportItemKey == DashboardItem.TOP_5_ITYPES_1H ||
						reportItemKey == DashboardItem.TOP_5_ITYPES_24H )
					{
						dashboardItemBox = new HBarChartBox();
					}
					
					if (dashboardItemBox != null)
					{
						var dashboardItemContainer:DashboardItemContainer = new DashboardItemContainer();
						dashboardItemBox.itemKey = reportItemKey;
						dashboardItemContainer.container.addElement(dashboardItemBox);
						dashboardItemContainer.itemKey = reportItemKey; 
						printedCanvas.addElement(dashboardItemContainer);
					}
				}
				for(var j:int = 0; j < printedCanvas.numChildren; j++)
				{
					if(j == 0)
					{
						printedCanvas.getChildAt(j).x = 10;
						printedCanvas.getChildAt(j).y = 20;
					}
					else{
						printedCanvas.getChildAt(j).scaleX = 0.75;
						printedCanvas.getChildAt(j).scaleY = 0.75;
						var h:int = printedCanvas.getChildAt(j).height;
						printedCanvas.getChildAt(j).x = xPosition;
						printedCanvas.getChildAt(j).y = yPosition;
						if(j%2 == 1)
							xPosition += 280;
						else
						{
							xPosition = 10;
							yPosition += 200
						}
					}
				}
			}
			
		]]>
	</fx:Script>
	
	<s:Rect left="0" right="0" top="0" bottom="0" >
		<s:stroke>
			<s:SolidColorStroke color="0xACADAF" weight="3"/>
		</s:stroke>
	</s:Rect>
	<mx:Canvas width="589" height="832" id="printedCanvas" backgroundColor="white">
		
	</mx:Canvas>
	<s:Button skinClass="com.mydlp.ui.skin.PDFBitmapLabelButton24Skin" styleName="fontSize24Style"
			  label="@Resource(bundle = 'messages', key = 'getReport.exportAsPDF.button.label')"
			  click="addChartButtonClickHandler(event)" x="350" y="800"/>
</s:TitleWindow>
