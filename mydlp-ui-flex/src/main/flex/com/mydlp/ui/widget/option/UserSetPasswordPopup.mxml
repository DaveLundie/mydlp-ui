<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:my="http://www.mydlp.com/flex/my"
			   xmlns:input="com.mydlp.ui.widget.general.input.*"
			   close="{close()}"
			   initialize="onInitialize(event)"
			   visible="false"
			   title="@Resource(bundle = 'messages', key = 'setPassword.popup.title')" xmlns:util="com.mydlp.ui.util.*" xmlns:validators="com.mydlp.ui.validators.*"
			   >
	<fx:Script>
		<![CDATA[
			import com.mydlp.ui.domain.AuthUser;
			import com.mydlp.ui.util.InteractionUtil;
			import com.mydlp.ui.util.LangUtil;
			
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.events.ValidationResultEvent;
			import mx.rpc.events.ResultEvent;
			
			[Bindable]
			public var authUser:AuthUser = null;
			
			protected function close(): void
			{
				InteractionUtil.closePopup(this);
			}
			
			protected function closeHandlerFunction(event:Event):void
			{
				close();
			}
			
			protected function setPasswordButtonClickHandler(event:MouseEvent):void
			{
				passwdValidation.validate();
				regExpValidator.validate();
				saveButton.enabled = false;
				re.save(authUser, newPasswd.text);
			}
			
			protected function validPassword(event:ValidationResultEvent):void
			{
				saveButton.enabled = true;
			}
			
			protected function invalidPassword(event:ValidationResultEvent):void
			{
				saveButton.enabled = false;
			}
			
			protected function onInitialize(event:FlexEvent):void
			{
				regExpValidator.expression = "^.*(?=.{6,30})(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).*$";
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<my:remote id="re" destination="userBRS" >
			<my:method name="save" result="closeHandlerFunction(event)" />
		</my:remote>
		<mx:RegExpValidator id="regExpValidator" 
							noMatchError="@Resource(bundle = 'messages', key = 'setPassword.popup.password.regexpValidator.message')"
							source="{newPasswd}" property="text"/>
		<validators:PasswordValidation id="passwdValidation" required="true" source="{retypePasswd}" property="text" 
									 confirmationSource="{newPasswd}" confirmationProperty="text"
									 valid="validPassword(event)"
									 invalid="invalidPassword(event)"/>
	</fx:Declarations>
	
	<s:Form>
		<s:FormItem label="@Resource(bundle = 'messages', key = 'setPassword.popup.newPassword.label')">
			<s:TextInput id="newPasswd" displayAsPassword="true"/>
		</s:FormItem>
		<s:FormItem label="@Resource(bundle = 'messages', key = 'setPassword.popup.retypePassword.label')">
			<s:TextInput id="retypePasswd" displayAsPassword="true"/>
		</s:FormItem>
		<s:FormItem>
			<s:Group>
				<s:layout>
					<s:HorizontalLayout gap="5" horizontalAlign="center"/>
				</s:layout>
				<s:Button id="saveButton" label="@Resource(bundle = 'messages', key = 'setPassword.popup.button.label')"
						  click="setPasswordButtonClickHandler(event)"/>
				<s:Button id="cancelButton" label="@Resource(bundle = 'messages', key = 'setPassword.popup.cancelButton.label')"
						  click="{close()}"/>
			</s:Group>
		</s:FormItem>
	</s:Form>
	
</s:TitleWindow>
