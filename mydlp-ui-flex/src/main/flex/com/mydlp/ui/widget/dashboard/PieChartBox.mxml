<?xml version="1.0" encoding="utf-8"?>
<dashboard:DashboardQueryItemBox xmlns:fx="http://ns.adobe.com/mxml/2009" 
							xmlns:s="library://ns.adobe.com/flex/spark" 
							xmlns:mx="library://ns.adobe.com/flex/mx" 
							xmlns:dashboard="com.mydlp.ui.widget.dashboard.*">
	<fx:Script>
		<![CDATA[
			import com.mydlp.ui.domain.DashboardItem;
			import com.mydlp.ui.util.LangUtil;
			
			import mx.collections.ArrayCollection;
			import mx.collections.ListCollectionView;
			
			import spark.formatters.NumberFormatter;
			
			public function round(num:Number, precision:Number):Number {
				var result:String;
				var f:NumberFormatter = new NumberFormatter();
				f.fractionalDigits = precision;
				result = f.format(num);
				return Number(result);
			}
			
			protected function itemLabelFunc(data:Object, field:String, index:Number, percentValue:Number):String {
				if (itemKey == DashboardItem.INCIDENT_BY_ACTIONS_1H || itemKey == DashboardItem.INCIDENT_BY_ACTIONS_24H || 
					itemKey == DashboardItem.INCIDENTS_BY_ACTIONS_1W)
				{
					var dataLabelKey:String = data.labelKey as String;
					if (dataLabelKey != null && dataLabelKey.substr(0,3) == "CIS")
					{
						return "Seclore";
					}
				}
				return 	LangUtil.getString("messages", "dashboardItem." + itemKey + "." + data.labelKey) +
						"\n " + data.value + " (" + round(percentValue,2) + "%)";
			}
			
			override protected function postDataLoad(): void {
				if (isItemDPEmpty())
					showNoDataMessage();
				else
					showChart();
			} 
			
			protected function isItemDPEmpty(): Boolean {
				if (itemDP == null) return true;
				if (!itemDP is ListCollectionView) return true;
				if ((itemDP as ListCollectionView).length > 0) return false;
				return true;
			} 
			
			protected function showNoDataMessage(): void {
				pieChart.includeInLayout=false;
				pieChart.visible=false;
				messageLabel.text = LangUtil.getString("messages", "dashboardItem.pie.nodata.message");
				messageLabel.includeInLayout=true;
				messageLabel.visible=true;
			}
			
			protected function showChart(): void {
				pieChart.includeInLayout=true;
				pieChart.visible=true;
				messageLabel.text = "";
				messageLabel.includeInLayout=false;
				messageLabel.visible=false;
			}
		]]>
	</fx:Script>
	
	<mx:PieChart id="pieChart" width="100%" height="100%"
				 includeInLayout="false" visible="false" 
				 dataProvider="{itemDP}"
				 innerRadius=".3">
		
		<mx:series>
			<mx:PieSeries id="ps"
						  field="value"
						  labelPosition="callout"
						  labelFunction="itemLabelFunc"/>
			
		</mx:series>
		
	</mx:PieChart>
	
	<s:Label id="messageLabel" width="100%" height="100%"
			 includeInLayout="false" visible="false" />
	
</dashboard:DashboardQueryItemBox>
