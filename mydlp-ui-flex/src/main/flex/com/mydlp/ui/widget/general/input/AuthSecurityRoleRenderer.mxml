<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				autoDrawBackground="true"
				click="itemClickHandler(event)">
				<!--updateComplete="updateCompleteHandler(event)">-->
				<!--creationComplete="{data = data as AuthSecurityRole}">-->
	<fx:Script>
		<![CDATA[
			import com.mydlp.ui.domain.AuthSecurityRole;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.List;
			import mx.controls.listClasses.ListBase;
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import mx.events.ItemClickEvent;
			
			import spark.events.IndexChangeEvent;
			
			
		
			protected function itemClickHandler(event:MouseEvent):void
			{
				var e:ItemClickEvent = new ItemClickEvent(ItemClickEvent.ITEM_CLICK, true);
				e.item = data;
				if(this.checkBox.selected)
					e.index = itemIndex;
				else
					e.index = -1;
				dispatchEvent(e);
			}
			
			protected function isRoleSelected(data:*):Boolean
			{
				var roles:ArrayCollection = FlexGlobals.topLevelApplication.userRoles
				for(var i:int = 0; i < roles.length; i++)
				{
					if(roles[i] == itemIndex)
						return true;
				}
				return false;
			}
			
			protected function onChangeHandler(event:Event):void
			{
				var roles:ArrayCollection = FlexGlobals.topLevelApplication.userRoles;
				if(event.currentTarget.selected == true)
				{
					if(this.data.roleName == "ROLE_ADMIN" || this.data.roleName == "ROLE_SUPER_ADMIN")
						FlexGlobals.topLevelApplication.userRoles.removeAll();
					else
					{
						if(FlexGlobals.topLevelApplication.userRoles.length != 0 && FlexGlobals.topLevelApplication.userRoles[0] == 0)
							FlexGlobals.topLevelApplication.userRoles.removeAll();
					}
					FlexGlobals.topLevelApplication.userRoles.addItem(itemIndex);
				}
				else
				{
					for(var j:int = 0; j < roles.length; j++)
					{
						if(roles[j] == itemIndex)
						{
							FlexGlobals.topLevelApplication.userRoles.removeItemAt(j);
							break;
						}
					}
				}
				var e:IndexChangeEvent = new IndexChangeEvent(IndexChangeEvent.CHANGE, true);
				e.newIndex = itemIndex;
				e.oldIndex = -1;
				dispatchEvent(e);
			}
			
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="normal" />
		<s:State name="hovered" />
		<s:State name="selected" />
	</s:states>
	
	<s:CheckBox label="{data.roleName}" id="checkBox" selected="{isRoleSelected(data)}"
				change="onChangeHandler(event)"/>	
	
</s:ItemRenderer>

