<?xml version="1.0" encoding="utf-8"?>
<mx:Tree xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:my="http://www.mydlp.com/flex/my"
		 labelField="label"
		 width="400" height="100%"
		 showRoot="false"
		 allowMultipleSelection="false"
		 creationComplete="populateTree()"
		 change="onChange(event)"
		 dataProvider="{DPForTree}"
		 itemRenderer="com.mydlp.ui.widget.objects.ObjectsTreeRenderer"
		 folderOpenIcon="@Embed('/assets/icons/16x16/folder.png')"
		 folderClosedIcon="@Embed('/assets/icons/16x16/folder.png')"
		 >
	<fx:Script>
		<![CDATA[
			import com.mydlp.ui.domain.AbstractEntity;
			import com.mydlp.ui.domain.DataFormat;
			import com.mydlp.ui.util.InteractionUtil;
			
			import mx.collections.ArrayCollection;
			import mx.collections.ListCollectionView;
			import mx.events.ListEvent;
			import mx.rpc.events.ResultEvent;
			
			[Bindable]
			protected var objects:Object;
			
			[Bindable]
			protected var DPForTree:ListCollectionView = new ArrayCollection();
			
			protected var childrenForDataFormats:ArrayCollection = new ArrayCollection();
			protected var childrenForOthers:ArrayCollection = new ArrayCollection();
			
			protected var tempOpenItems:Object;
			
			public function refreshTree(): void
			{
				tempOpenItems = openItems;
				invalidateList();
				re.getObjects();
			}
			
			protected function saveAllHandler(event:ResultEvent): void
			{
				refreshTree();
			}
			
			protected function getObjectsHandler(event:ResultEvent): void
			{
				objects = event.result as ListCollectionView;
				for each(var item:* in objects)
				{
					if(item is DataFormat )
						childrenForDataFormats.addItem(item);
					else
						childrenForOthers.addItem(item);
				}
				openItems = tempOpenItems;
				validateNow();
			}
			
			protected function populateTree():void
			{
				var parentDataFormats:Object = new Object();
				parentDataFormats["label"] = "Data Formats";
				parentDataFormats["children"] = childrenForDataFormats;
				DPForTree.addItem(parentDataFormats);
				
				var parentOthers:Object = new Object();
				parentOthers["label"] = "Others";
				parentOthers["children"] = childrenForOthers;
				DPForTree.addItem(parentOthers);
				
				refreshTree();
			}
			
			protected function onChange(event:ListEvent):void
			{
				if(selectedItem != null && selectedItem is AbstractEntity)
				{
					//InteractionUtil.newEditDialog(selectedItem);
				}
			}
			
		]]>
	</fx:Script>
	
	
	<fx:Declarations>
		<my:remote id="re" destination="objectsBRS">
			<my:method name="getObjects" result="getObjectsHandler(event)" />
		</my:remote>
	</fx:Declarations>
</mx:Tree>