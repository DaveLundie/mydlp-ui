<?xml version="1.0" encoding="utf-8"?>
<s:SkinnableContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:my="http://www.mydlp.com/flex/my"
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  width="{InputLabel.VERTICAL_INPUT_WIDTH}"
		  height="150" creationComplete="{refresh()}" xmlns:domain="com.mydlp.ui.domain.*">
	<fx:Script>
		<![CDATA[
			import com.mydlp.ui.domain.ADDomainGroup;
			import com.mydlp.ui.domain.ADDomainOU;
			import com.mydlp.ui.domain.ADDomainRoot;
			import com.mydlp.ui.domain.ADDomainUser;
			import com.mydlp.ui.widget.general.popup.InputLabel;
			
			import mx.collections.ArrayCollection;
			import mx.collections.ListCollectionView;
			import mx.events.ListEvent;
			import mx.rpc.events.ResultEvent;
			
			import spark.events.IndexChangeEvent;
			
			[Bindable]
			protected var adDomains:ListCollectionView = new ArrayCollection;
			
			[Bindable]
			protected var domainItemIdx:int = -1;
			
			protected function getADDomainsHandler(event:ResultEvent): void
			{
				adDomains.removeAll();
				adDomains = event.result as ListCollectionView;
			}
			
			public function refresh(): void
			{
				adDomains.removeAll();
				if(domainItem == null)
					return;
				
				if(domainItem is ADDomainUser)
				{
					adDomains.addItem(domainItem as ADDomainUser);
					searchInput.text = (domainItem as ADDomainUser).displayName;
				} 
				else if(domainItem is ADDomainOU)
				{
					adDomains.addItem(domainItem as ADDomainOU);
					searchInput.text = (domainItem as ADDomainOU).name;
				}
				else if(domainItem is ADDomainGroup)
				{
					adDomains.addItem(domainItem as ADDomainGroup);
					searchInput.text = (domainItem as ADDomainGroup).name;
				}
				filteredADUsers.selectedIndex = 0;
			}
			
			
			protected function onClickSearchButton(event:MouseEvent):void
			{
				re.getFilteredADDomains(searchInput.text);
			}
			
			protected function onSelectionChange(event:IndexChangeEvent):void
			{
				if(filteredADUsers.selectedIndex == -1)
				{
					domainItem = null;
					return;
				}
				if(filteredADUsers.selectedItem is ADDomainUser)
				{
					domainItem = filteredADUsers.selectedItem as ADDomainUser;
				} 
				else if(filteredADUsers.selectedItem is ADDomainOU)
				{
					domainItem = filteredADUsers.selectedItem as ADDomainOU;
				}
				else if(filteredADUsers.selectedItem is ADDomainGroup)
				{
					domainItem = filteredADUsers.selectedItem as ADDomainGroup;
				}
				else
					domainItem = null;
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<domain:ADDomainItem id="domainItem"/>
		
		<my:remote id="re" destination="adDomainBRS">
			<my:method name="getFilteredADDomains" result="getADDomainsHandler(event)" />
		</my:remote>
	</fx:Declarations>
	
	<s:layout>
		<s:HorizontalLayout verticalAlign="middle" gap="2"/>
	</s:layout>
	
	<s:Group width="100%" height="100%">
		<s:layout>
			<s:VerticalLayout gap="10"/>
		</s:layout>
		
		<s:Group width="100%">
			<s:layout>
				<s:HorizontalLayout gap="5" verticalAlign="middle"/>
			</s:layout>
					
			<s:Label text="@Resource(bundle = 'messages', key = 'inventory.adDomainItem.search.label')"/>
			<s:TextInput id="searchInput"/>
			
			<s:Button id="searchButton" click="onClickSearchButton(event)" 
					  label="@Resource(bundle = 'messages', key = 'inventory.adDomainItem.search.button.label')"/>
			
		</s:Group>
			<s:List id="filteredADUsers" width="100%" height="70%"
					itemRenderer="com.mydlp.ui.widget.general.input.ADDomainItemGroupRenderer" 
					dataProvider="{adDomains}"
					allowMultipleSelection="false"
					change="onSelectionChange(event)"
					/>
	</s:Group>
	
</s:SkinnableContainer>
