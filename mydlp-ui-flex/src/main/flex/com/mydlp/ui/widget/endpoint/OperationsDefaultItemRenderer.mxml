<?xml version="1.0" encoding="utf-8"?>
<s:GridItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
					xmlns:s="library://ns.adobe.com/flex/spark" 
					xmlns:mx="library://ns.adobe.com/flex/mx"
					xmlns:my="http://www.mydlp.com/flex/my"
					clipAndEnableScrolling="true">
	
	<fx:Script>
		<![CDATA[
			import com.mydlp.ui.domain.EndpointStatus;
			override public function prepare(hasBeenRecycled:Boolean):void {
			}
			
			override public function set data(value:Object):void
			{
				if (value == null) return;
				if (!value is EndpointStatus) return;
				var es:EndpointStatus = value as EndpointStatus;
				if (es == null) return;
				isDiscoveryInProg = es.discoverInProg;
				super.data = es;
			}
			
			protected function discoverNowClickHandler(event:MouseEvent):void
			{
				if (data == null) return;
				if (!data is EndpointStatus) return;
				var es:EndpointStatus = data as EndpointStatus;
				if (es == null) return;
				re.discoverEndpoint(es.endpointAlias);
				es.discoverInProg = true;
				isDiscoveryInProg = true;
			}
			
			protected function stopDiscoveryClickHandler(event:MouseEvent):void
			{
				if (data == null) return;
				if (!data is EndpointStatus) return;
				var es:EndpointStatus = data as EndpointStatus;
				if (es == null) return;
				re.stopDiscovery(es.endpointAlias);
				es.discoverInProg = false;
				isDiscoveryInProg = false;
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<fx:Boolean id="isDiscoveryInProg" />
		<fx:uint id="bgColor">#FFFFFF</fx:uint>
		<fx:Number id="bgAlpha">0.0</fx:Number>
		
		<my:remote id="re" destination="endpointStatusBRS">
			<my:method name="discoverEndpoint" result="{}"/>
			<my:method name="stopDiscovery" result="{}"/>
		</my:remote>
	</fx:Declarations>
	
	<s:states>
		<s:State name="normal" />
		<s:State name="hovered" />
		<s:State name="selected" />
	</s:states>
	
	<s:Rect top="0" bottom="0" right="0" left="0">
		<s:fill>
			<s:SolidColor color="{bgColor}" alpha="{bgAlpha}"/>
		</s:fill>
	</s:Rect>
	
	<s:VGroup width="120" height="100%" horizontalAlign="left" paddingLeft="7" 
			  verticalAlign="middle" paddingTop="1" paddingBottom="1"
			  visible="{data != null}" includeInLayout="{data != null}">
		<s:Label id="discoveryScheduled" text="@Resource(bundle='messages', key='endpoints.state.discoveryInProg.true')" 
				 visible.normal="{isDiscoveryInProg}" includeInLayout.normal="{isDiscoveryInProg}"
				 visible="false" includeInLayout="false"/>
		
		<s:HGroup paddingLeft="0" paddingTop="0" paddingBottom="0" paddingRight="0"
				  verticalAlign="middle"
				  visible="false" includeInLayout="false"
				  visible.selected="{isDiscoveryInProg}" includeInLayout.selected="{isDiscoveryInProg}"
				  visible.hovered="{isDiscoveryInProg}" includeInLayout.hovered="{isDiscoveryInProg}">
			<s:Button id="stopDiscovery" label="@Resource(bundle='messages', key='endpoints.state.stopDiscoveryButton.label')" 
					  click="stopDiscoveryClickHandler(event)" 
					  />
			<mx:ProgressBar id="progressBar" indeterminate="true" width="40"
							label="" labelPlacement="center" labelWidth="0"
							/>
			
		</s:HGroup>
		
		<s:Button id="discoverNow" label="@Resource(bundle='messages', key='endpoints.state.discoveryNowButton.label')" 
				  click="discoverNowClickHandler(event)" 
				  visible="false" includeInLayout="false" 
				  visible.selected="{!isDiscoveryInProg}" includeInLayout.selected="{!isDiscoveryInProg}"
				  visible.hovered="{!isDiscoveryInProg}" includeInLayout.hovered="{!isDiscoveryInProg}"
				  />
				  
	</s:VGroup>
	
</s:GridItemRenderer>
