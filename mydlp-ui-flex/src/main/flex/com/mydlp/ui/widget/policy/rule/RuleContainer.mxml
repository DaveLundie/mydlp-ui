<?xml version="1.0" encoding="utf-8"?>
<s:SkinnableContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:my="http://www.mydlp.com/flex/my"
		 xmlns:rule="com.mydlp.ui.widget.policy.rule.*"
		 width="100%" height="100%"
		 minWidth="700"
		 creationComplete="onCreationComplete(event)">
	<fx:Script>
		<![CDATA[
			import avmplus.getQualifiedClassName;
			
			import com.mydlp.ui.domain.EndpointRule;
			import com.mydlp.ui.domain.MailRule;
			import com.mydlp.ui.domain.WebRule;
			
			import mx.collections.ArrayCollection;
			import mx.collections.ListCollectionView;
			import mx.controls.Alert;
			import mx.core.IUIComponent;
			import mx.events.DragEvent;
			import mx.events.FlexEvent;
			import mx.managers.DragManager;
			import mx.rpc.events.ResultEvent;
			
			[Bindable]
			protected var ruleDP:ListCollectionView = new ArrayCollection();;
			
			public function refreshRules():void
			{
				//TODO: maintain scrool position
				ruleList.dataGroup.invalidateDisplayList();
				ruleDP.removeAll();
				re.getRules();
			}
			
			protected function acceptDrop(dragEvent:DragEvent):void
			{
				var dropTarget:IUIComponent = dragEvent.currentTarget as IUIComponent;
				DragManager.acceptDragDrop(dropTarget);
				DragManager.showFeedback(DragManager.NONE);
			}
			
			protected function getRulesHandler(event:ResultEvent): void
			{
				var rules:ArrayCollection = event.result as ArrayCollection;
				for each (var rule:* in rules) 
				{
					var ruleBox:RuleBox = null;
					if (rule is WebRule)
					{
						ruleBox = new WebRuleBox();
						ruleBox.ruleObject = rule as WebRule;
					}
					else if (rule is MailRule)
					{
						ruleBox = new MailRuleBox();
						ruleBox.ruleObject = rule as MailRule;
					}
					else if (rule is EndpointRule)
					{
						ruleBox = new EndpointRuleBox();
						ruleBox.ruleObject = rule as EndpointRule;
					}
					else
						throw new Error("Unknown rule type;");
					
					ruleDP.addItem(ruleBox);
				}
				ruleList.validateNow();
			}
			
			protected function onCreationComplete(event:FlexEvent):void
			{
				refreshRules();
			}
			
			protected function clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<my:remote id="re" destination="ruleBRS">
			<my:method name="getRules" result="getRulesHandler(event)" />
		</my:remote>
	</fx:Declarations>
	
	<s:layout>
		<s:VerticalLayout/>
	</s:layout>
	
	<s:Button label="@Resource(key='rules.addrule', bundle='messages')" click="clickHandler(event)" />
	
	<s:List id="ruleList" dataProvider="{ruleDP}" width="100%" height="100%"
			itemRenderer="spark.skins.spark.DefaultComplexItemRenderer"/>

</s:SkinnableContainer>
