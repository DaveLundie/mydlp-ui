<?xml version="1.0" encoding="utf-8"?>
<s:SkinnableContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:my="http://www.mydlp.com/flex/my"
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  width="{InputLabel.VERTICAL_INPUT_WIDTH}"
		  height="150" creationComplete="{refreshLists()}">
	<fx:Script>
		<![CDATA[
			import com.mydlp.ui.domain.DataFormat;
			import com.mydlp.ui.widget.general.popup.InputLabel;
			
			import mx.collections.ArrayCollection;
			import mx.events.DragEvent;
			import mx.rpc.events.ResultEvent;
			
			[Bindable]
			protected var otherDataFormats:ListCollectionView;
			
			[Bindable]
			protected var allDataFormats:ListCollectionView;
			
			protected function removeClickHandler(event:MouseEvent):void
			{
				dfList.dataGroup.invalidateDisplayList();
				for each (var o:Object in dfList.selectedIndices)
					dataFormats.removeItemAt(o as int);
				dfList.validateNow();
				
				refreshLists();
			}
			
			protected function addClickHandler(event:MouseEvent):void
			{
				dfList.dataGroup.invalidateDisplayList();
				
				if (dataFormats.length == 1 && (dataFormats.getItemAt(0) as DataFormat).nameKey == "dataFormat.all.label")
					dataFormats.removeAll();
				
				for each (var o:Object in odfList.selectedIndices)
				{
					var df:DataFormat = otherDataFormats.getItemAt(o as int) as DataFormat;
					if (df.nameKey == "dataFormat.all.label")
					{
						dataFormats.removeAll();
						dataFormats.addItem(df);
						break;
					}
					else
					{
						dataFormats.addItem(df);
					}
				}
				dfList.validateNow();
				
				refreshLists();
			}
			
			protected function refreshLists(): void
			{
				odfList.dataGroup.invalidateDisplayList();
				if (allDataFormats == null)
					re.getDataFormats();
				else
					populateOtherDataFormats();
			}
			
			protected function getDataFormatsHandler(event:ResultEvent): void
			{
				allDataFormats = event.result as ListCollectionView;
				populateOtherDataFormats();
			}
			
			protected function populateOtherDataFormats(): void
			{
				otherDataFormats = new ArrayCollection();
				
				if (dataFormats != null)
					for each (var ndf:Object in allDataFormats)
					{
						var addFlag:Boolean = true;
						for each (var cdf:Object in dataFormats)
						if ((cdf as DataFormat).id == (ndf as DataFormat).id)
						{
							addFlag = false;
							break;
						}
						if (addFlag)
							otherDataFormats.addItem(ndf);
					}
				odfList.validateNow();
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<mx:ListCollectionView id="dataFormats" />
		
		<my:remote id="re" destination="dataFormatBRS">
			<my:method name="getDataFormats" result="getDataFormatsHandler(event)" />
		</my:remote>
	</fx:Declarations>
	
	<s:layout>
		<s:HorizontalLayout verticalAlign="middle" gap="2"/>
	</s:layout>
	
	<s:Group width="43%" height="100%">
		<s:layout>
			<s:VerticalLayout gap="2"/>
		</s:layout>
		<s:Label text="@Resource(bundle = 'messages', key = 'generic.edit.input.dataFormats.odfList.label')" />
		<s:List id="odfList" dataProvider="{otherDataFormats}" 
				width="100%" height="80%" 
				itemRenderer="com.mydlp.ui.widget.general.input.DataFormatRenderer" />
	</s:Group>
	
	<s:Group width="14%" height="100%">
		<s:layout>
			<s:VerticalLayout gap="2" verticalAlign="middle" horizontalAlign="center"/>
		</s:layout>
		<s:Button skinClass="com.mydlp.ui.skin.RightBitmapButton32Skin" click="addClickHandler(event)"/>
		<s:Button skinClass="com.mydlp.ui.skin.LeftBitmapButton32Skin" click="removeClickHandler(event)" enabled="{dfList.selectedIndex != -1}"/>
	</s:Group>
	
	<s:Group width="43%" height="100%">
		<s:layout>
			<s:VerticalLayout gap="2"/>
		</s:layout>
		<s:Label text="@Resource(bundle = 'messages', key = 'generic.edit.input.dataFormats.dfList.label')" />
		<s:List id="dfList" dataProvider="{dataFormats}" 
				width="100%" height="80%"
				itemRenderer="com.mydlp.ui.widget.general.input.DataFormatRenderer" />
	</s:Group>
	
	
</s:SkinnableContainer>
