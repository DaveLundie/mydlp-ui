<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" 
			   xmlns:my="http://www.mydlp.com/flex/my"
			   width="100%" height="100%"
			   title="@Resource(bundle = 'messages', key = 'logs.export.title')"
			   close="{InteractionUtil.closePopup(this)}">
	<fx:Script>
		<![CDATA[
			import com.mydlp.ui.util.AsyncListDataProvider;
			import com.mydlp.ui.util.InteractionUtil;
			
			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			import mx.collections.ListCollectionView;
			import mx.graphics.ImageSnapshot;
			import mx.graphics.codec.JPEGEncoder;
			
			import org.alivepdf.display.Display;
			import org.alivepdf.images.ColorSpace;
			import org.alivepdf.layout.Mode;
			import org.alivepdf.layout.Orientation;
			import org.alivepdf.layout.Position;
			import org.alivepdf.layout.Resize;
			import org.alivepdf.layout.Size;
			import org.alivepdf.layout.Unit;
			import org.alivepdf.pdf.PDF;
			import org.alivepdf.saving.Method;
			
			
			protected var xPosition:int = 10;
			protected var yPosition:int=210;
			public var asyncListDataProvider:AsyncListDataProvider = null;
			
			[Bindable]
			protected var logDP:ListCollectionView = new ArrayCollection();
			
			protected function exportAsPDF(event:Event):void
			{
				var bytes:ByteArray = new ByteArray;
				var reportPDF:PDF = new PDF(Orientation.LANDSCAPE, Unit.MM, Size.A4, 90);
				reportPDF.setDisplayMode(Display.REAL);
				reportPDF.addPage();
				var image:ImageSnapshot = ImageSnapshot.captureImage(printedGroup, 300 , new JPEGEncoder(100), false);//for high resolution image
				var resize:Resize = new Resize(Mode.FIT_TO_PAGE, Position.CENTERED);//for fitting into page
				reportPDF.addImageStream(image.data, ColorSpace.DEVICE_RGB, resize);
				bytes = reportPDF.save(Method.LOCAL);
				var f:FileReference = new FileReference();
				f.save(bytes, "Weekly_Report.pdf");
			}
			
			public function populate(): void
			{				
				headerGroup.removeAllElements()
				headerGroup.addElement(new LogReportHeadComponent);
				
				for(var i:int = 0; i < asyncListDataProvider.asyncListView.length && i < 8; i++)
					logDP.addItem(asyncListDataProvider.asyncListView.getItemAt(i));
			}
			
		]]>
	</fx:Script>
	
	<s:Rect left="0" right="0" top="0" bottom="0" >
		<s:stroke>
			<s:SolidColorStroke color="0xACADAF" weight="3"/>
		</s:stroke>
	</s:Rect>
	<s:SkinnableContainer width="932" height="595" id="printedGroup" backgroundColor="white">
		
		<s:layout>
			<s:VerticalLayout gap="5" horizontalAlign="center"/>
		</s:layout>
		
		<s:Group id="headerGroup" />
			
		<s:DataGrid id="logList" dataProvider="{logDP}" width="932" height="420" variableRowHeight="true">
			<s:columns>
				<s:ArrayList>
					<s:GridColumn headerText="@Resource(bundle = 'messages', key = 'log.container.header.date')"
								  dataField="date" width="130"/>
					<s:GridColumn headerText="@Resource(bundle = 'messages', key = 'log.container.header.source')" 
								  itemRenderer="com.mydlp.ui.widget.log.IncidentSourceColumnRenderer"/>
					<s:GridColumn headerText="@Resource(bundle = 'messages', key = 'log.container.header.destination')"
								  itemRenderer="com.mydlp.ui.widget.log.IncidentDestinationColumnRenderer"/>
					<s:GridColumn headerText="@Resource(bundle = 'messages', key = 'log.container.header.policy')"
								  itemRenderer="com.mydlp.ui.widget.log.IncidentPolicyColumnRenderer"/>
					<s:GridColumn headerText="@Resource(bundle = 'messages', key = 'log.container.header.details')"
								  itemRenderer="com.mydlp.ui.widget.log.IncidentDetailsColumnRenderer"/>
					<s:GridColumn headerText="@Resource(bundle = 'messages', key = 'log.container.header.files')"
								  itemRenderer="com.mydlp.ui.widget.log.IncidentFilesColumnRenderer"
								  width="100"/>
				</s:ArrayList>
			</s:columns>
		</s:DataGrid>
	</s:SkinnableContainer>
	<s:Button id="exportPDFButton" skinClass="com.mydlp.ui.skin.PDFBitmapLabelButton24Skin" styleName="fontSize24Style"
			  label="@Resource(bundle = 'messages', key = 'dashboard.weeklyReport.exportAsPDF.button.label')"
			  click="exportAsPDF(event)" x="350" y="800"/>
</s:TitleWindow>
