<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:my="http://www.mydlp.com/flex/my"
			   xmlns:input="com.mydlp.ui.widget.general.input.*"
			   close="{close()}"
			   visible="false"
			   title="@Resource(bundle = 'messages', key = 'documentDatabase.add.title.label')"
			   width="650"
			   >
	
	<fx:Script>
		<![CDATA[
			import com.mydlp.ui.domain.DocumentDatabaseFileEntry;
			import com.mydlp.ui.util.InteractionUtil;
			import com.mydlp.ui.util.Md5Util;
			
			import flash.net.navigateToURL;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.events.DragEvent;
			import mx.events.FlexEvent;
			import mx.managers.DragManager;
			import mx.rpc.events.ResultEvent;
			
			protected var refUploadFileList:FileReferenceList;
			
			public var ddfeInput:DocumentDatabaseFileEntryInput = null;
			
			protected var remaining:int = 0;
			
			protected function close(): void
			{
				if (okButton.visible)
					InteractionUtil.closePopup(this);
			}
			
			protected function uploadButton(event:MouseEvent):void
			{
				refUploadFileList = new FileReferenceList();
				refUploadFileList.browse(); 
				refUploadFileList.addEventListener(Event.SELECT,onFileSelect); 
			}
			
			protected function loadEachFile(file:FileReference):void
			{
				var fileLoad:FileLoadStatus = new FileLoadStatus();
				fileLoad.databaseId = ddfeInput.databaseId;
				loadStatusList.addElement(fileLoad);
				fileLoad.loadFile(file, onFileLoadComplete);
			}
			
			protected function onFileSelect(event:Event):void
			{
				refUploadFileList = event.currentTarget as FileReferenceList;
				var fileListArray:Array = refUploadFileList.fileList;
				
				if (loadStatusList.numElements > 25)
					loadStatusList.removeAllElements();
				
				remaining += fileListArray.length;
				if (remaining > 0)
				{
					disableButtons();
				}
				
				for(var i:int = 0; i < fileListArray.length; i++)
				{
					var file:FileReference = fileListArray[i] as FileReference;
					loadEachFile(file);
				}
			}
			
			protected function onFileLoadComplete(ddfe:DocumentDatabaseFileEntry):void
			{
				if (ddfe != null)
					ddfeInput.addEntry(ddfe);
				remaining --;
				if (remaining == 0)
				{
					enableButtons();
				}
			}
			
			public function populate():void
			{				
				visible = true;
			}
			
			protected function enableButtons(): void
			{
				webbasedButton.enabled = true;
				uploaderappButton.enabled = true;
				okButton.enabled = true;
				browseButton.enabled = true;
			}
			
			protected function disableButtons(): void
			{
				webbasedButton.enabled = false;
				uploaderappButton.enabled = false;
				okButton.enabled = false;
				browseButton.enabled = false;
			}
			
			protected function onRadioButtonChange(event:Event):void
			{
				if (webbasedButton.selected)
				{
					currentState="default";
				}
				else if (uploaderappButton.selected)
				{
					currentState="uploaderapp";
				}
				else
				{
					throw new Error("Unexpected!");
				}
			}
			
			protected function generateButtonClick(event:MouseEvent):void
			{
				disableButtons();
				tokenInput.enabled = false;
				re.generateToolsUploaderToken(ddfeInput.databaseId.toString());
			}
			
			protected function generateTokenHandler(event:ResultEvent): void
			{
				tokenInput.text = event.result as String;
				tokenInput.enabled = true;
				FlexGlobals.topLevelApplication.objectsContainer.refreshDocumentDatabaseTokenControl();
				enableButtons();
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<my:remote id="re" destination="tokenBRS">
			<my:method name="generateToolsUploaderToken" result="generateTokenHandler(event)" />
		</my:remote>
		
		<s:RadioButtonGroup id="rbg" change="onRadioButtonChange(event)"/>
	</fx:Declarations>
	
	<s:states>
		<s:State name="default" />
		<s:State name="uploaderapp" />
	</s:states>
	
	
	
	<s:VGroup width="100%" height="100%" gap="20"
			  paddingLeft="20" paddingRight="20" paddingTop="10" paddingBottom="10">
		
		<s:VGroup width="100%" height="60" 
				  verticalAlign="middle" horizontalAlign="center">
			<s:RadioButton id="webbasedButton"
						   label="@Resource(key='documentDatabase.fileUpload.webbasedButton.label', bundle='messages')"
						   group="{rbg}"
						   selected="true"
						   width="100%" />
			<s:RadioButton id="uploaderappButton"
						   label="@Resource(key='documentDatabase.fileUpload.uploaderappButton.label', bundle='messages')"
						   group="{rbg}"
						   width="100%" />
		</s:VGroup>
		
		<s:Group includeIn="default" width="100%" height="100%">
			<s:layout>
				<s:VerticalLayout />
			</s:layout>
			<s:VGroup id="loadStatusList" gap="5" paddingBottom="10" horizontalAlign="center" width="100%"/>
			
			<s:VGroup width="100%" horizontalAlign="center" gap="20" verticalAlign="middle" >
				<s:Label width="100%" 
					text="@Resource(key='documentDatabase.fileUpload.webbased.message', bundle='messages')" />
				<s:HGroup width="100%" 
						  horizontalAlign="center" gap="20" verticalAlign="middle" >
					
					<s:Button id="browseButton" label="@Resource(key='documentDatabase.fileUpload.browse', bundle='messages')"
							  click="uploadButton(event)" />
					
					<s:Button id="okButton" label="@Resource(bundle = 'messages', key = 'documentDatabase.button.ok.label')" 
							  click="{close()}"/>
					
				</s:HGroup>
			</s:VGroup>
		</s:Group>
		
		<s:VGroup includeIn="uploaderapp" width="100%" height="100%" gap="20">
			<s:Label width="100%" 
				text="@Resource(key='documentDatabase.fileUpload.uploaderapp.message', bundle='messages')" />
			
			<s:Button skinClass="com.mydlp.ui.skin.DownloadBitmapLabelButton16Skin"
						  label="@Resource(key='documentDatabase.fileUpload.download.uploaderapp.message', bundle='messages')"
						  click="{navigateToURL(new URLRequest('/static/apps/mydlp-uploader.air'), '_blank')}"
						  fontWeight="bold"/>
			
			<s:HGroup width="100%" verticalAlign="middle" gap="10">
				<s:Button label="@Resource(key='documentDatabase.fileUpload.uploaderapp.generateButton.label', bundle='messages')"
						  click="generateButtonClick(event)" width="150"/>
				<s:TextInput id="tokenInput" editable="false" enabled="false" width="100%" />
			</s:HGroup>
			
			
		</s:VGroup>
	</s:VGroup>
	
</s:TitleWindow>
