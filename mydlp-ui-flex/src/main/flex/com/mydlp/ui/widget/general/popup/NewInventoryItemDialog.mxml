<?xml version="1.0" encoding="utf-8"?>
<popup:ClosableTitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				xmlns:general="com.mydlp.ui.widget.general.*"
				title="@Resource(bundle = 'messages', key = 'inventory.newdialog.title')" 
				xmlns:popup="com.mydlp.ui.widget.general.popup.*" 
				>
	<fx:Script>
		<![CDATA[
			import com.mydlp.ui.domain.ApplicationName;
			import com.mydlp.ui.domain.Domain;
			import com.mydlp.ui.domain.EndpointHostname;
			import com.mydlp.ui.domain.FileSystemDirectory;
			import com.mydlp.ui.domain.InformationType;
			import com.mydlp.ui.domain.InventoryCategory;
			import com.mydlp.ui.domain.InventoryGroup;
			import com.mydlp.ui.domain.InventoryItem;
			import com.mydlp.ui.domain.Network;
			import com.mydlp.ui.util.InteractionUtil;
			import com.mydlp.ui.util.SessionUtil;
			
			import mx.core.FlexGlobals;
			
			protected function close():void
			{
				InteractionUtil.closeCurrentPopup();
			}
			
			protected function generateInventoryItem():InventoryItem
			{
				var i:InventoryItem = new InventoryItem;
				if(isDiscoveryTab)
					i.category = FlexGlobals.topLevelApplication.discoveryContainer.inventoryTree.myInventoryTree.selectedItem;
				else
					i.category = FlexGlobals.topLevelApplication.policyContainer.inventoryTree.myInventoryTree.selectedItem;
				return i;
			}
			
			protected function categoryHandler():void
			{
				close();
				var c:InventoryCategory = new InventoryCategory();
				if(isDiscoveryTab)
					c.category = FlexGlobals.topLevelApplication.discoveryContainer.inventoryTree.myInventoryTree.selectedItem;
				else
					c.category = FlexGlobals.topLevelApplication.policyContainer.inventoryTree.myInventoryTree.selectedItem;
				c.editable = true;
				InteractionUtil.newEditDialog(c);
			}
			protected function informationTypeGroupHandler():void
			{
				close();
				var g:InventoryGroup = new InventoryGroup();
				g.itemType = InventoryGroup.TYPE_ITYPE;
				if(isDiscoveryTab)
					g.category = FlexGlobals.topLevelApplication.discoveryContainer.inventoryTree.myInventoryTree.selectedItem;
				else
					g.category = FlexGlobals.topLevelApplication.policyContainer.inventoryTree.myInventoryTree.selectedItem;
				InteractionUtil.newEditDialog(g);
			}
			protected function networkHandler():void
			{
				close();
				var i:InventoryItem = generateInventoryItem();
				i.item = new Network();
				InteractionUtil.newEditDialog(i);
			}
			protected function informationTypeHandler():void
			{
				close();
				var i:InventoryItem = generateInventoryItem();
				i.item = new InformationType();
				InteractionUtil.newEditDialog(i);	
			}
			protected function domainHandler():void
			{
				close();
				var i:InventoryItem = generateInventoryItem();
				i.item = new Domain();
				InteractionUtil.newEditDialog(i);	
			}
			
			protected function fileSystemDirectoryHandler():void
			{
				close();
				var i:InventoryItem = generateInventoryItem();
				i.item = new FileSystemDirectory();
				InteractionUtil.newEditDialog(i);
			}
			
			protected function applicationNameHandler():void
			{
				close();
				var i:InventoryItem = generateInventoryItem();
				i.item = new ApplicationName();
				InteractionUtil.newEditDialog(i);
			}
			
			protected function addUserClickHandler(event:MouseEvent):void
			{
				close(); 
				var popup:NewInventoryUserDialog = InteractionUtil.newPopup(NewInventoryUserDialog) as NewInventoryUserDialog;
				popup.isDiscoveryTab = isDiscoveryTab;
			}
			
			protected function endpointHostnameHandler(event:MouseEvent):void
			{
				close();
				var i:InventoryItem = generateInventoryItem();
				i.item = new EndpointHostname();
				InteractionUtil.newEditDialog(i);
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<fx:Boolean id="isDiscoveryTab"/>
	</fx:Declarations>
	
	<s:VGroup paddingBottom="10" paddingLeft="10" paddingRight="10" paddingTop="10"
			  horizontalAlign="center">
		<s:Label text="@Resource(bundle = 'messages', key = 'inventory.newdialog.message')"/>
		<s:VGroup horizontalAlign="left" >
			<s:Button skinClass="com.mydlp.ui.skin.FolderBitmapLabelButton16Skin" 
					  label="@Resource(bundle = 'messages', key = 'inventory.newdialog.category')" 
					  click="categoryHandler()"/>
			<s:Button skinClass="com.mydlp.ui.skin.NetworkBitmapLabelButton16Skin" 
					  label="@Resource(bundle = 'messages', key = 'inventory.newdialog.network')" 
					  click="networkHandler()"/>
			<s:Button skinClass="com.mydlp.ui.skin.InformationTypeBitmapLabelButton16Skin" 
					  label="@Resource(bundle = 'messages', key = 'inventory.newdialog.informationType')" 
					  click="informationTypeHandler()"/>
			<s:Button skinClass="com.mydlp.ui.skin.InformationTypeGroupBitmapLabelButton16Skin" 
					  label="@Resource(bundle = 'messages', key = 'inventory.newdialog.informationTypeGroup')" 
					  click="informationTypeGroupHandler()"/>
			<s:Button skinClass="com.mydlp.ui.skin.DomainBitmapLabelButton16Skin" 
					  label="@Resource(bundle = 'messages', key = 'inventory.newdialog.domain')"
					  includeInLayout="{SessionUtil.isEnterprise() &amp;&amp; !isDiscoveryTab}"
					  visible="{SessionUtil.isEnterprise() &amp;&amp; !isDiscoveryTab}"
					  click="domainHandler()"/>
			<s:Button skinClass="com.mydlp.ui.skin.DomainBitmapLabelButton16Skin" 
					  label="@Resource(bundle = 'messages', key = 'inventory.newdialog.endpointHostname')"
					  includeInLayout="{SessionUtil.isEnterprise() &amp;&amp; isDiscoveryTab}"
					  visible="{SessionUtil.isEnterprise() &amp;&amp; isDiscoveryTab}"
					  click="endpointHostnameHandler(event)"/>
			<s:Button skinClass="com.mydlp.ui.skin.FileSystemDirectoryBitmapLabelButton16Skin" 
					  label="@Resource(bundle = 'messages', key = 'inventory.newdialog.fileSystemDirectory')" 
					  includeInLayout="{SessionUtil.isEnterprise() &amp;&amp; isDiscoveryTab}"
					  visible="{SessionUtil.isEnterprise() &amp;&amp; isDiscoveryTab}"
					  click="fileSystemDirectoryHandler()"/>
			<s:Button skinClass="com.mydlp.ui.skin.RemoteStorageBitmapLabelButton16Skin" 
					  label="@Resource(bundle = 'messages', key = 'inventory.newdialog.remoteFileSystemDirectory')" 
					  includeInLayout="{SessionUtil.isEnterprise() &amp;&amp; isDiscoveryTab}"
					  visible="{SessionUtil.isEnterprise() &amp;&amp; isDiscoveryTab}"
					  click="{close(); InteractionUtil.newPopup(NewInventoryRemoteDiscoveryDialog);}"/>
			<s:Button skinClass="com.mydlp.ui.skin.ApplicationNameBitmapLabelButton16Skin" 
					  label="@Resource(bundle = 'messages', key = 'inventory.newdialog.applicationName')" 
					  includeInLayout="{SessionUtil.isEnterprise() &amp;&amp; !isDiscoveryTab}"
					  visible="{SessionUtil.isEnterprise() &amp;&amp; !isDiscoveryTab}"
					  click="applicationNameHandler()"/>
			<s:Button skinClass="com.mydlp.ui.skin.UserBitmapLabelButton16Skin" 
					  label="@Resource(bundle = 'messages', key = 'inventory.newdialog.userObject')" 
					  click="addUserClickHandler(event)"/>
			
		</s:VGroup>
	</s:VGroup>
	
</popup:ClosableTitleWindow>
