<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:my="http://www.mydlp.com/flex/my"
			   xmlns:input="com.mydlp.ui.widget.general.input.*"
			   close="{close()}"
			   initialize="onInitialize(event)"
			   visible="false"
			   title="@Resource(bundle = 'messages', key = 'editCurrentUser.popup.title')" xmlns:util="com.mydlp.ui.util.*" xmlns:validators="com.mydlp.ui.validators.*"
			   >
	<fx:Script>
		<![CDATA[
			import com.mydlp.ui.domain.AuthUser;
			import com.mydlp.ui.util.InteractionUtil;
			import com.mydlp.ui.util.LangUtil;
			
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.events.ValidationResultEvent;
			import mx.rpc.events.ResultEvent;
			[Bindable]
			public var currentUser:AuthUser = null;
			public var initialUserName:String = null;
			protected function close(): void
			{
				InteractionUtil.closePopup(this);
			}
			protected function controlPasswordHandler(event:ResultEvent):void
			{
				var result:Boolean = event.result as Boolean;
				if(result == false)
					Alert.show(LangUtil.getString("messages", "editCurrentUser.password.error.message"),
						LangUtil.getString("messages", "editCurrentUser.password.error.title"));
				else
				{
					re.save(currentUser, newPasswd.text);		
				}
			}
			protected function closeHandlerFunction(event:Event):void
			{
				InteractionUtil.closePopup(this);
				if(initialUserName != currentUser.username)
					navigateToURL(new URLRequest ('j_spring_security_logout'), '_self');
			}
			protected function saveHandler(event:ResultEvent):void
			{
				currentUser = event.result as AuthUser;
				Alert.show(LangUtil.getString("messages", "editCurrentUser.ok.message"),
					LangUtil.getString("messages", "editCurrentUser.ok.title"), 4, null, closeHandlerFunction);
			}
			protected function saveButtonClickHandler(event:MouseEvent):void
			{
				saveButton.enabled = false;
				re.isPasswordTrue(nameInput.text, password.text);
			}
			
			protected function valid(event:ValidationResultEvent):void
			{
				saveButton.enabled = true;
			}
			
			protected function invalid(event:ValidationResultEvent):void
			{
				saveButton.enabled = false;
			}
			
			protected function onInitialize(event:FlexEvent):void
			{
				regExpValidator.expression = "^.*(?=.{6,30})(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).*$";
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<my:remote id="re" destination="userBRS" >
			<my:method name="isPasswordTrue" result="controlPasswordHandler(event)" />
			<my:method name="save" result="saveHandler(event)" />
		</my:remote>
		<mx:RegExpValidator id="regExpValidator" 
							noMatchError="@Resource(bundle = 'messages', key = 'setPassword.popup.password.regexpValidator.message')"
							source="{newPasswd}" property="text"/>
		<validators:PasswordValidation id="passwdValidation" required="true" source="{reenterPasswd}" property="text" 
									 confirmationSource="{newPasswd}" confirmationProperty="text"
									 valid="valid(event)"
									 invalid="invalid(event)"/>
	</fx:Declarations>
	
	<s:Form>
		<s:FormItem label="@Resource(bundle = 'messages', key = 'editCurrentUser.popup.name.label')">
			<s:TextInput id="nameInput" text="@{currentUser.username}" editable="false"/>
		</s:FormItem>
		<s:FormItem label="@Resource(bundle = 'messages', key = 'editCurrentUser.popup.email.label')">
			<s:TextInput id="emailInput" text="{currentUser.email}" editable="false"/>
		</s:FormItem>
		<s:FormItem label="@Resource(bundle = 'messages', key = 'editCurrentUser.popup.currentPassword.label')">
			<s:TextInput id="password" displayAsPassword="true"/>
		</s:FormItem>
		<s:FormItem label="@Resource(bundle = 'messages', key = 'editCurrentUser.popup.newPassword.label')">
			<s:TextInput id="newPasswd" displayAsPassword="true"/>
		</s:FormItem>
		<s:FormItem label="@Resource(bundle = 'messages', key = 'editCurrentUser.popup.reenterNewPassword.label')">
			<s:TextInput id="reenterPasswd" displayAsPassword="true"/>
		</s:FormItem>
		<s:FormItem >
			<s:Group>
				<s:layout>
					<s:HorizontalLayout gap="5" horizontalAlign="center"/>
				</s:layout>
				<s:Button id="saveButton" label="@Resource(bundle = 'messages', key = 'editCurrentUser.popup.saveButton.label')"
						  click="saveButtonClickHandler(event)"/>
				<s:Button id="cancelButton" label="@Resource(bundle = 'messages', key = 'editCurrentUser.popup.cancelButton.label')"
						  click="close()"/>
			</s:Group>
		</s:FormItem>
	</s:Form>
	
</s:TitleWindow>
