<?xml version="1.0" encoding="utf-8"?>
<s:SkinnableContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
					xmlns:s="library://ns.adobe.com/flex/spark" 
					xmlns:mx="library://ns.adobe.com/flex/mx" 
					xmlns:rule="com.mydlp.ui.widget.policy.rule.*"
					>
	<fx:Script>
		<![CDATA[
			import com.mydlp.ui.domain.DiscoveryRule;
			import com.mydlp.ui.domain.Rule;
			import com.mydlp.ui.util.LangUtil;
			import com.mydlp.ui.util.SessionUtil;
			
			import mx.collections.ArrayCollection;
			import mx.collections.ListCollectionView;
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			
			import spark.events.IndexChangeEvent;
			
			[Bindable]
			public var action:String = Rule.ACTION_PASS;

			[Bindable]
			public var ruleObject:Rule;
			
			[Bindable]
			protected var actions:ListCollectionView = 
				new ArrayCollection(
					new Array(
						Rule.ACTION_PASS,
						Rule.ACTION_BLOCK,
						Rule.ACTION_LOG,
						Rule.ACTION_QUARANTINE,
						Rule.ACTION_ARCHIVE
					)
				);
			
			[Bindable]
			protected var actionsForCommunity:ListCollectionView = 
				new ArrayCollection(
					new Array(
						Rule.ACTION_PASS,
						Rule.ACTION_LOG,
						Rule.ACTION_BLOCK
					)
				);
			
			protected function actionListChangeHandler(event:IndexChangeEvent):void
			{
				if (ruleObject is DiscoveryRule && (
					actionList.selectedItem == Rule.ACTION_BLOCK ||
					actionList.selectedItem == Rule.ACTION_QUARANTINE ))
					{
						Alert.show(LangUtil.getString("messages", "rule.discovery.deleteaction.warning"),
							LangUtil.getString("messages", "rule.discovery.deleteaction.warning.title"));
					}
				ruleObject.save();
			}
			
			protected function actionListItemRendererFunction(item:Object):ClassFactory {
				if (ruleObject is DiscoveryRule)
				{
					return new ClassFactory(DiscoveryActionListItemRenderer);	
				}
				else
				{
					return new ClassFactory(GenericActionListItemRenderer);
				}
			}
			
			public function getActionLabel(action:String): String {
				var ruleType:String = "generic";
				if (ruleObject is DiscoveryRule)
					ruleType = "discovery";
				return LangUtil.getString('messages','rule.action.'+ruleType+'.'+action+'.label');
			}
			
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="normal" />
		<s:State name="hovered" />
		<s:State name="selected" />
	</s:states>
	<s:layout>
		<s:VerticalLayout horizontalAlign="left" verticalAlign="middle" />
	</s:layout>
	
	<!--
		should align using padding prop.
	-->
	<s:Group includeIn="normal, hovered" >
		<s:Spacer width="20" />
		<rule:ActionBoxElement action="{ruleObject.action}"/>
	</s:Group>
	
	<s:Group includeIn="selected" >
		<s:layout>
			<s:VerticalLayout/>
		</s:layout>
		<s:Group>
			<s:layout>
				<s:HorizontalLayout />
			</s:layout>
			<s:Spacer width="13" />
			<s:DropDownList id="actionList" width="120"
							contentBackgroundAlpha="1"
							dataProvider="{SessionUtil.isEnterprise()? actions:actionsForCommunity}" 
							selectedItem="@{ruleObject.action}"
							change="actionListChangeHandler(event)" 
							itemRendererFunction="actionListItemRendererFunction"/>
		</s:Group>
		<s:Spacer height="19" />
	</s:Group>
	
</s:SkinnableContainer>
