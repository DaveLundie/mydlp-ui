<?xml version="1.0" encoding="utf-8"?>
<s:List xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx"
		contentBackgroundAlpha="0"
		selectionColor="0xCEDBEF"
		rollOverColor="0xDEEBFF"
		borderVisible="false"
		requireSelection="false"
		initialize="onInitialize(event)"
		>
	<fx:Script>
		<![CDATA[
			import com.mydlp.ui.domain.RuleItem;
			
			import mx.collections.ArrayCollection;
			import mx.collections.ListCollectionView;
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import mx.events.ItemClickEvent;
			import mx.utils.ObjectUtil;
			
			import spark.events.IndexChangeEvent;
			
			protected static var selectedList:RList = null;
			protected static var lists:ListCollectionView = new ArrayCollection();
			
			public function invalidateList():void
			{
				var _itemRenderer:IFactory = itemRenderer;
				itemRenderer = null;
				itemRenderer = _itemRenderer;
			}
			
			protected function onInitialize(event:FlexEvent):void
			{
				
				this.addEventListener(ItemClickEvent.ITEM_CLICK, onItemClick);
				this.addEventListener(IndexChangeEvent.CHANGE, onChange);
				
				if (autoDeselect)
				{
					lists.addItem(this);
				}
			}
			
			protected function onItemClick(event:ItemClickEvent):void
			{
				if (autoDeselect) selectedList = this;
				regulateSelection();
			}
			
			protected function onChange(event:IndexChangeEvent):void
			{
				if (autoDeselect) selectedList = this;
				regulateSelection();
			}
			
			public static function resetListList(): void
			{
				RList.lists = new ArrayCollection();
			}
			
			public static function regulateSelection(): void
			{
				for each (var l:RList in RList.lists)
				{
					if (ObjectUtil.compare(l, RList.selectedList) != 0)
					{
						deselect(l);
					}
					else if ( FlexGlobals.topLevelApplication.ruleContainer.ruleList.selectedItem != null &&
								(
									l.selectedItem == null ||
									! l.selectedItem is RuleItem ||
									l.selectedItem.rule.id != 
											FlexGlobals.topLevelApplication.
												ruleContainer.ruleList.selectedItem.id
								)
							)
					{
						RList.selectedList = null;
						deselect(l);
					}
				}
			}
			
			protected static function deselect(l:RList): void
			{
				if (l.selectedIndex == -1)
					return;
				l.selectedIndex = -1;
				l.invalidateList();
				l.validateNow();
			}
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<fx:Boolean id="autoDeselect" />
	</fx:Declarations>
	
	<s:layout>
		<s:VerticalLayout useVirtualLayout="false" requestedMinRowCount="1"/>
	</s:layout>
</s:List>
